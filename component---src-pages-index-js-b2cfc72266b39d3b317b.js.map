{"version":3,"sources":["webpack:///./src/components/Results.jsx","webpack:///./src/components/KM_Form.jsx","webpack:///./src/pages/index.js"],"names":["Results","props","className","isNaN","current_km","toPrecision","target_kills","target_matches","target_km","KM_Form","useState","current_kills","setCurrentKills","current_matches","setCurrentMatches","setCurrentKM","setTargetKM","setTargetMatches","setTargetKills","useEffect","htmlFor","type","onChange","event","value","target","parseInt","name","id","placeholder","aria-describedby","IndexPage","title"],"mappings":"uIAwBeA,MArBf,SAAiBC,GAEb,OACI,yBAAKC,UAAU,WACRC,MAAMF,EAAMA,MAAMG,YAEf,+BADF,kDAAwBH,EAAMA,MAAMG,WAAWC,YAAY,IAE7DJ,EAAMA,MAAMK,cAAgBL,EAAMA,MAAMM,gBAAkBN,EAAMA,MAAMO,UACpE,6BACI,uCAAY,gCAASP,EAAMA,MAAMK,cAAjC,aAAiE,gCAASL,EAAMA,MAAMM,gBAAtF,cAA0HN,EAAMA,MAAMM,eAAiB,EAAI,oCAAkB,+BAA7K,aAAsMN,EAAMA,MAAMO,UAAlN,SACA,gCAAMP,EAAMA,MAAMK,aAAeL,EAAMA,MAAMM,gBAAgBF,YAAY,GAAzE,kBAEF,iCCyEHI,MAnFf,SAAiBR,GAAQ,IAAD,EACqBS,qBAAlCC,EADa,KACEC,EADF,OAEyBF,qBAAtCG,EAFa,KAEIC,EAFJ,OAGeJ,qBAA5BN,EAHa,KAGDW,EAHC,OAIaL,qBAA1BF,EAJa,KAIFQ,EAJE,OAKuBN,mBAAS,GAA7CH,EALa,KAKGU,EALH,OAMmBP,qBAAhCJ,EANa,KAMCY,EAND,KAwCpB,OARAC,qBAAU,WAGNJ,EAAaJ,EAAgBE,GAE7BK,EADoBV,GAAaK,EAAkBN,GAAmBI,KAEvE,CAACA,EAAeE,EAAiBL,EAAWD,IAG3C,6BACI,8BACI,yBAAKL,UAAU,cACX,2BAAOkB,QAAQ,mBAAf,mBACA,2BAAOC,KAAK,SAASC,SA/BN,SAACC,GAC5B,IAAIC,EAAQD,EAAME,OAAOD,MAEzBV,EAAkBY,SAASF,KA4BwCA,MAAOX,EAAiBc,KAAK,kBAAkBC,GAAG,kBAAkB1B,UAAU,eAAe2B,YAAY,kBAAkBC,mBAAiB,0BAGvM,yBAAK5B,UAAU,cACX,2BAAOkB,QAAQ,iBAAf,iBACA,2BAAOC,KAAK,SAASC,SA1CR,SAACC,GAC1B,IAAIC,EAAQD,EAAME,OAAOD,MAEzBZ,EAAgBc,SAASF,KAuCwCA,MAAOb,EACxDT,UAAU,eAAeyB,KAAK,gBAAgBC,GAAG,gBAAgBE,mBAAiB,qBAAqBD,YAAY,mBAG3H,yBAAK3B,UAAU,cACX,2BAAOkB,QAAQ,aAAf,cACA,2BAAOC,KAAK,SAASC,SApCZ,SAACC,GACtB,IAAIC,EAAQD,EAAME,OAAOD,MAEzBR,EAAYU,SAASF,KAkCLtB,UAAU,eAAeyB,KAAK,YAAYH,MAAOhB,EAAWoB,GAAG,YAAYE,mBAAiB,iBAAiBD,YAAY,qBAGjI,yBAAK3B,UAAU,cACX,2BAAOkB,QAAQ,kBAAf,kBACA,2BAAOC,KAAK,SAASC,SApCP,SAACC,GAC3B,IAAIC,EAAQD,EAAME,OAAOD,MAEzBP,EAAiBS,SAASF,KAkCVtB,UAAU,eAAeyB,KAAK,iBAAiBH,MAAOjB,EAAgBqB,GAAG,iBAAiBE,mBAAiB,sBAAsBD,YAAY,wCAIzJ,kBAAC,EAAD,CACI5B,MAAO,CACHY,gBAAiBA,EACjBF,cAAeA,EACfP,WAAYA,EACZE,aAAcA,EACdE,UAAWA,EACXD,eAAgBA,O,YCnErBwB,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,kBACX,kBAAC,EAAD","file":"component---src-pages-index-js-b2cfc72266b39d3b317b.js","sourcesContent":["import React from 'react'\n// import PropTypes from 'prop-types';\n\nfunction Results(props) {\n    // console.log(props);\n    return (\n        <div className=\"results\">\n            {(!isNaN(props.props.current_km)) ?\n                <p>Your current K/M is {props.props.current_km.toPrecision(2)}</p>\n                : <span></span>}\n            {(props.props.target_kills && props.props.target_matches && props.props.target_km) ?\n                <div>\n                    <p>You need <strong>{props.props.target_kills}</strong> kills in <strong>{props.props.target_matches}</strong> more match{props.props.target_matches > 1 ? <span>es</span> : <span></span>} to reach {props.props.target_km} K/M.</p>\n                    <p>({(props.props.target_kills / props.props.target_matches).toPrecision(2)} kills/match)</p>\n                </div>\n                : <span></span>}\n        </div>\n    )\n}\n\n// Results.propTypes = {\n\n// }\n\nexport default Results\n\n","//jshint esversion:8\nimport React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport Results from './Results';\n\nfunction KM_Form(props) {\n    const [current_kills, setCurrentKills] = useState();\n    const [current_matches, setCurrentMatches] = useState();\n    const [current_km, setCurrentKM] = useState();\n    const [target_km, setTargetKM] = useState();\n    const [target_matches, setTargetMatches] = useState(1);\n    const [target_kills, setTargetKills] = useState();\n\n    const onCurrentKillsChange = (event) => {\n        let value = event.target.value;\n        // console.log(\"Current kills changed to \" + value);\n        setCurrentKills(parseInt(value));\n    };\n\n    const onCurrentMatchesChange = (event) => {\n        let value = event.target.value;\n        // console.log(\"Current matches changed to \" + value);\n        setCurrentMatches(parseInt(value));\n    };\n\n    const onTargetKMChange = (event) => {\n        let value = event.target.value;\n        // console.log(\"TargetKM changed to \" + value);\n        setTargetKM(parseInt(value));\n    };\n\n    const onTargetMatchesChange = (event) => {\n        let value = event.target.value;\n        // console.log(\"Target matches changed to \" + value);\n        setTargetMatches(parseInt(value));\n    };\n\n    useEffect(() => {\n        //calculate kills needed to get to final K/M\n        // console.log(\"Calculating kills needed\");\n        setCurrentKM(current_kills / current_matches);\n        let kills_needed = (target_km * (current_matches + target_matches)) - current_kills;\n        setTargetKills(kills_needed);\n    }, [current_kills, current_matches, target_km, target_matches]);\n\n    return (\n        <div>\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"current_matches\">Current matches</label>\n                    <input type=\"number\" onChange={onCurrentMatchesChange} value={current_matches} name=\"current_matches\" id=\"current_matches\" className=\"form-control\" placeholder=\"current_matches\" aria-describedby=\"current_matches_help\" />\n                    {/* <small id=\"current_matches_help\" className=\"text-muted\">Current matches on which K/M is to be calculated</small> */}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"current_kills\">Current kills</label>\n                    <input type=\"number\" onChange={onCurrentKillsChange} value={current_kills}\n                        className=\"form-control\" name=\"current_kills\" id=\"current_kills\" aria-describedby=\"current_kills_help\" placeholder=\"current kills\" />\n                    {/* <small id=\"current_kills_help\" className=\"form-text text-muted\">Current number of kills</small> */}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"target_km\">Target K/M</label>\n                    <input type=\"number\" onChange={onTargetKMChange}\n                        className=\"form-control\" name=\"target_km\" value={target_km} id=\"target_km\" aria-describedby=\"target_km_help\" placeholder=\"Your target K/M\" />\n                    {/* <small id=\"target_km_help\" className=\"form-text text-muted\">Your target K/M</small> */}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"target_matches\">Target matches</label>\n                    <input type=\"number\" onChange={onTargetMatchesChange}\n                        className=\"form-control\" name=\"target_matches\" value={target_matches} id=\"target_matches\" aria-describedby=\"target_matches_help\" placeholder=\"Number of matches to reach target\" />\n                    {/* <small id=\"target_matches_help\" className=\"form-text text-muted\">Number of matches you wish to reach the target K/M in.</small> */}\n                </div>\n            </form>\n            <Results\n                props={{\n                    current_matches: current_matches,\n                    current_kills: current_kills,\n                    current_km: current_km,\n                    target_kills: target_kills,\n                    target_km: target_km,\n                    target_matches: target_matches\n                }} />\n        </div>\n    )\n}\n\n// KM_Form.propTypes = {\n// }\n\nexport default KM_Form\n\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport KM_Form from '../components/KM_Form';\nimport SEO from '../components/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"KD Calculator\" />\n    <KM_Form />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}